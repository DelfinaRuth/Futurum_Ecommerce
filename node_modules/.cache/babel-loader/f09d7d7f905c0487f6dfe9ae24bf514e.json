{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport setProducts from \"./products\";\nimport cartReducer from \"./cart\";\nimport singleCategoryReducer from \"./singleCategory\";\nimport categoriesReducer from \"./categories\";\nimport setProduct from \"./singleProduct\";\nimport adminUserReducer from \"./admin\";\nimport usersReducer from \"./users\";\nimport singleUserReducer from \"./singleUser\";\nimport paymentReducer from \"./payments\";\nimport reviewReducer from \"./review\";\nimport mailReducer from \"./mail\";\nconst store = configureStore({\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  reducer: {\n    user: singleUserReducer,\n    users: usersReducer,\n    admin: adminUserReducer,\n    products: setProducts,\n    product: setProduct,\n    cart: cartReducer,\n    category: singleCategoryReducer,\n    categories: categoriesReducer,\n    payments: paymentReducer,\n    reviews: reviewReducer,\n    mail: mailReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/dolphin/Documents/futurum/src/store/index.js"],"names":["configureStore","logger","setProducts","cartReducer","singleCategoryReducer","categoriesReducer","setProduct","adminUserReducer","usersReducer","singleUserReducer","paymentReducer","reviewReducer","mailReducer","store","middleware","getDefaultMiddleware","concat","reducer","user","users","admin","products","product","cart","category","categories","payments","reviews","mail"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,qBAAP,MAAkC,kBAAlC;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,gBAAP,MAA6B,SAA7B;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,MAAMC,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8Bf,MAA9B,CADX;AAE3BgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAET,iBADC;AAEPU,IAAAA,KAAK,EAAEX,YAFA;AAGPY,IAAAA,KAAK,EAAEb,gBAHA;AAIPc,IAAAA,QAAQ,EAAEnB,WAJH;AAKPoB,IAAAA,OAAO,EAAEhB,UALF;AAMPiB,IAAAA,IAAI,EAAEpB,WANC;AAOPqB,IAAAA,QAAQ,EAAEpB,qBAPH;AAQPqB,IAAAA,UAAU,EAAEpB,iBARL;AASPqB,IAAAA,QAAQ,EAAEhB,cATH;AAUPiB,IAAAA,OAAO,EAAEhB,aAVF;AAWPiB,IAAAA,IAAI,EAAEhB;AAXC;AAFkB,CAAD,CAA5B;AAiBA,eAAeC,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport setProducts from \"./products\";\nimport cartReducer from \"./cart\";\nimport singleCategoryReducer from \"./singleCategory\";\nimport categoriesReducer from \"./categories\";\nimport setProduct from \"./singleProduct\";\nimport adminUserReducer from \"./admin\";\nimport usersReducer from \"./users\";\nimport singleUserReducer from \"./singleUser\";\nimport paymentReducer from \"./payments\";\nimport reviewReducer from \"./review\";\nimport mailReducer from \"./mail\";\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  reducer: {\n    user: singleUserReducer,\n    users: usersReducer,\n    admin: adminUserReducer,\n    products: setProducts,\n    product: setProduct,\n    cart: cartReducer,\n    category: singleCategoryReducer,\n    categories: categoriesReducer,\n    payments: paymentReducer,\n    reviews: reviewReducer,\n    mail: mailReducer,\n  },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}